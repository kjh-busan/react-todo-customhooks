{"ast":null,"code":"var _jsxFileName = \"/Users/gumika/workspace/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskReqeust\n  } = useHttp();\n  const createTask = data => {};\n  const enterTaskHandler = async taskText => {\n    sendTaskReqeust({\n      url: \"https://react-http-3d9ed-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: taskText\n      })\n    });\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch({\n        method: \"POST\",\n        body: {\n          text: taskText\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"dy4kJa+h7W4shR2gLOAATnsH7Qk=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","jsxDEV","_jsxDEV","NewTask","props","_s","isLoading","error","sendRequest","sendTaskReqeust","createTask","data","enterTaskHandler","taskText","url","method","headers","body","JSON","stringify","text","setIsLoading","setError","response","fetch","ok","Error","json","generatedId","name","createdTask","id","onAddTask","err","message","children","onEnterTask","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gumika/workspace/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskReqeust } = useHttp();\n\n  const createTask = (data) => {};\n  const enterTaskHandler = async (taskText) => {\n    sendTaskReqeust({\n      url: \"https://react-http-3d9ed-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ text: taskText }),\n    });\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch({\n        method: \"POST\",\n        body: { text: taskText },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,WAAW,EAAEC;EAAgB,CAAC,GAAGT,OAAO,EAAE;EAEpE,MAAMU,UAAU,GAAIC,IAAI,IAAK,CAAC,CAAC;EAC/B,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3CJ,eAAe,CAAC;MACdK,GAAG,EAAE,uFAAuF;MAC5FC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEP;MAAS,CAAC;IACzC,CAAC,CAAC;IACFQ,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC;QAC3BT,MAAM,EAAE,MAAM;QACdE,IAAI,EAAE;UAAEG,IAAI,EAAEP;QAAS,CAAC;QACxBG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMf,IAAI,GAAG,MAAMY,QAAQ,CAACI,IAAI,EAAE;MAElC,MAAMC,WAAW,GAAGjB,IAAI,CAACkB,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAW;QAAER,IAAI,EAAEP;MAAS,CAAC;MAEvDT,KAAK,CAAC4B,SAAS,CAACF,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZX,QAAQ,CAACW,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAb,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEnB,OAAA,CAACJ,OAAO;IAAAqC,QAAA,gBACNjC,OAAA,CAACH,QAAQ;MAACqC,WAAW,EAAExB,gBAAiB;MAACyB,OAAO,EAAE/B;IAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAC9DlC,KAAK,iBAAIL,OAAA;MAAAiC,QAAA,EAAI5B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEd,CAAC;AAACpC,EAAA,CA9CIF,OAAO;EAAA,QACgDH,OAAO;AAAA;AAAA0C,EAAA,GAD9DvC,OAAO;AAgDb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}