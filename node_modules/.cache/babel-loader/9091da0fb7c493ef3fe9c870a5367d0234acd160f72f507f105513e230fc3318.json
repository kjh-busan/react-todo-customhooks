{"ast":null,"code":"var _jsxFileName = \"/Users/gumika/workspace/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const enterTaskHandler = async taskText => {\n    _s();\n    useHttp();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-3d9ed-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  _s(enterTaskHandler, \"lQkf1BRJZai4gIYiScgua8IvEUg=\", false, function () {\n    return [useHttp];\n  });\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(NewTask, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","Section","TaskForm","useHttp","jsxDEV","_jsxDEV","NewTask","props","_s2","_s","$RefreshSig$","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message","children","onEnterTask","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gumika/workspace/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    useHttp();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-3d9ed-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAAAP,EAAA;IAC3CN,OAAO,EAAE;IACTS,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uFAAuF,EACvF;QACEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEP;QAAS,CAAC,CAAC;QACxCQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,EAAE;MAElC,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAW;QAAEN,IAAI,EAAEP;MAAS,CAAC;MAEvDT,KAAK,CAAC0B,SAAS,CAACF,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAvB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAACH,EAAA,CA9BIM,gBAAgB;IAAA,QACpBZ,OAAO;EAAA;EA+BT,oBACEE,OAAA,CAACJ,OAAO;IAAAmC,QAAA,gBACN/B,OAAA,CAACH,QAAQ;MAACmC,WAAW,EAAEtB,gBAAiB;MAACuB,OAAO,EAAE3B;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAC9D7B,KAAK,iBAAIR,OAAA;MAAA+B,QAAA,EAAIvB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEd,CAAC;AAAClC,GAAA,CA1CIF,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}